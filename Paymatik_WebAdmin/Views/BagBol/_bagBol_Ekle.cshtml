@model  EL.tbl_BagBol

@{
    EL.tbl_Bina _bina = (EL.tbl_Bina)ViewBag.Bina;
    int okumaSayisi = @_bina.tbl_BagBol.Count() + 1;
}

@using (Ajax.BeginForm("BagBol_Ekle", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "bagbolTable", OnSuccess = "OnSuccess", InsertionMode = InsertionMode.InsertAfter }))
{
    <div class="form-horizontal">

        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)


        <div class="form-group row">
            @Html.TextBoxFor(model => model.BinaId, new { @class = "form-control", @Value = @_bina.ID, @readonly = "readonly", @style = "display: none" })
        </div>

        <div class="form-group row">
            @Html.TextBoxFor(model => model.OkumaSirasi, new { @class = "form-control", @Value = okumaSayisi, @readonly = "readonly", @style = "display: none" })
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.KatNo, "Kat No", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.KatNo, new { htmlAttributes = new { @class = "form-control Miktar"} })
                @Html.ValidationMessageFor(model => model.KatNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Cephe, "Cephesi", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.Cephe, ViewBag.Cephe as SelectList, "--Seçiniz--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cephe, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.KapiNo, "Kapı No", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.KapiNo, new { htmlAttributes = new { @class = "form-control Miktar" } })
                @Html.ValidationMessageFor(model => model.KapiNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Metrekare, "Metrekare", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Metrekare, new { htmlAttributes = new { @class = "form-control Miktar" } })
                @Html.ValidationMessageFor(model => model.Metrekare, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.BagBolTur, "Türü", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.BagBolTur, ViewBag.BagBolTur as SelectList, "--Seçiniz--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BagBolTur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.OrtakAlan, "Ortak Alanı ?", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9 ">
                @Html.RadioButton("OrtakAlan", false, new { @class = "control-label col-md-1" })
                Hayır
                @Html.RadioButton("OrtakAlan", true, new { @class = "control-label col-md-1 offset-1" })
                Evet
            </div>
        </div>

        <button class='btn btn-outline-dark' style="float:right" type="submit">
            <i class="far fa-arrow-alt-circle-right">&nbsp; Listeye Ekle &nbsp;</i>
            <i class="far fa-arrow-alt-circle-right"> </i>
        </button>

    </div>

}


<script>
    function OnSuccess() {

        $(function () {
            var Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 2000
            });
            Toast.fire({
                icon: 'success',
                title: 'Bilgiler Başarı ile Kaydedildi...'
            });           
            YeniKayitHazirlik();
        });

        function YeniKayitHazirlik() {
            var okumaSayisi = parseInt($("#OkumaSirasi").val()) + 1;
            $("#OkumaSirasi").val(okumaSayisi);

            $("#KatNo").val('');
            $("#KapiNo").val('');
            $("#Metrekare").val('');           
        }

        gorseliYukle(@_bina.ID);
    }
</script>





